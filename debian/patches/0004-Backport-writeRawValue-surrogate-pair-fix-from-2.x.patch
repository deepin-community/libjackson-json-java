From 298849da99b27d86fe581781086fb39809cd83bf Mon Sep 17 00:00:00 2001
From: Marcin Szczepanski <mszczepanski@atlassian.com>
Date: Mon, 11 Jul 2016 10:33:52 +1000
Subject: [PATCH] Backport writeRawValue surrogate pair fix from 2.x

This is a backport of a Jackson 2.x fix:
https://github.com/FasterXML/jackson-core/commit/5e14c461c04f71fc3f35a5ac2e75ed2df0d7c462
---

upstream link: https://github.com/FasterXML/jackson-1/commit/298849da99b27d86fe581781086fb39809cd83bf

 .../codehaus/jackson/impl/Utf8Generator.java  |  6 ++---
 .../jackson/impl/TestUtf8Generator.java       | 24 +++++++++++++++++++
 2 files changed, 27 insertions(+), 3 deletions(-)

diff --git a/src/java/org/codehaus/jackson/impl/Utf8Generator.java b/src/java/org/codehaus/jackson/impl/Utf8Generator.java
index ccc25cd3..8ac6bd00 100644
--- a/src/java/org/codehaus/jackson/impl/Utf8Generator.java
+++ b/src/java/org/codehaus/jackson/impl/Utf8Generator.java
@@ -754,7 +754,7 @@ public class Utf8Generator
                 _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));
                 _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));
             } else {
-                _outputRawMultiByteChar(ch, cbuf, offset, len);
+                offset = _outputRawMultiByteChar(ch, cbuf, offset, len);
             }
         }
     }
@@ -812,7 +812,7 @@ public class Utf8Generator
                 bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));
                 bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));
             } else {
-                _outputRawMultiByteChar(ch, cbuf, offset, len);
+                offset = _outputRawMultiByteChar(ch, cbuf, offset, len);
             }
         }
     }
@@ -1643,7 +1643,7 @@ public class Utf8Generator
         if (ch >= SURR1_FIRST) {
             if (ch <= SURR2_LAST) { // yes, outside of BMP
                 // Do we have second part?
-                if (inputOffset >= inputLen) { // nope... have to note down
+                if (inputOffset >= inputLen || cbuf == null) { // nope... have to note down
                     _reportError("Split surrogate on writeRaw() input (last character)");
                 }
                 _outputSurrogates(ch, cbuf[inputOffset]);
diff --git a/src/test/org/codehaus/jackson/impl/TestUtf8Generator.java b/src/test/org/codehaus/jackson/impl/TestUtf8Generator.java
index c4e12c3a..48461376 100644
--- a/src/test/org/codehaus/jackson/impl/TestUtf8Generator.java
+++ b/src/test/org/codehaus/jackson/impl/TestUtf8Generator.java
@@ -2,7 +2,10 @@ package org.codehaus.jackson.impl;
 
 import java.io.ByteArrayOutputStream;
 
+import org.codehaus.jackson.JsonFactory;
 import org.codehaus.jackson.JsonGenerator;
+import org.codehaus.jackson.JsonParser;
+import org.codehaus.jackson.JsonToken;
 import org.codehaus.jackson.io.IOContext;
 import org.codehaus.jackson.util.BufferRecycler;
 
@@ -25,4 +28,25 @@ public class TestUtf8Generator
         gen.writeString(str);
         gen.flush();
     }
+
+    public void testSurrogatesWithRaw() throws Exception
+    {
+        final String VALUE = quote("\uD83C\uDF89");
+        ByteArrayOutputStream bytes = new ByteArrayOutputStream();
+        IOContext ioc = new IOContext(new BufferRecycler(), bytes, true);
+        JsonGenerator jgen = new Utf8Generator(ioc, 0, null, bytes);
+        jgen.writeRawValue(VALUE);
+        jgen.close();
+
+        final byte[] JSON = bytes.toByteArray();
+
+        JsonParser jp = new JsonFactory().createJsonParser(JSON);
+        assertToken(JsonToken.VALUE_STRING, jp.nextToken());
+        String str = jp.getText();
+        assertEquals(2, str.length());
+        assertEquals((char) 0xD83C, str.charAt(0));
+        assertEquals((char) 0xDF89, str.charAt(1));
+        System.out.println(str);
+        jp.close();
+    }
 }
-- 
2.20.1

